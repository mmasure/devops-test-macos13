name: Recette build IOS App

on:
  push:
    tags:
      - "v*.*.*-recette"
    branches:
      - develop

#env:
#  ENV: recette

jobs:
  Variables:
    name: Set variables
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
      - name: Change Xcode version
        run: |
          xcversion select ${{ vars.XCODE_VERSION }}
      - name: check OSX version
        run: sw_vers --productVersion
      - name: get Xcode version selected
        id: selectedXcode
        run: echo "VERSION=$(xcversion selected| grep "Xcode ")" >> $GITHUB_OUTPUT #\d{0,2}(\.\d{1,2}")
      - name: Failed switch Xcode if not equals
        if: ${{ steps.selectedXcode.outputs.version != vars.CHECK_VERSION }} # change to ${{ xcodebuildVersion == steps.varsConfig.outputs.xcodeVersion }}
        run: exit 1

  Localization:
    name: Get localization files
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
      - name: curl localization files
        run: echo "curl localization files"

  Test:
    name: Run test unit
    uses: ./.github/workflows/wc_test.yml
    needs:
      - Variables
      - Localization
    with:
      xcodeversion: ${{ vars.XCODE_VERSION }}

  Build:
    name: Build IOS App
    uses: ./.github/workflows/wc_build.yml
    needs:
      - Variables
      - Localization
    with:
      xcodeversion: ${{ vars.XCODE_VERSION }}
      profile_name: ${{ vars.PROFILE_NAME }}
      configuration_build: ${{ vars.CONFIGURATION_BUILD }}
    secrets:
      PROVISIONING_PROFILE: ${{ secrets.PROVISIONING_PROFILE }}
      CERTIFICATES_P12: ${{ secrets.CERTIFICATES_P12 }}
      CERTIFICATES_P12_PASSWORD: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
      KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}


  Release:
    if: startsWith(github.ref, 'refs/tags/')
    name: Build release
    needs:
      - Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/download-artifact@v3
        id: download
        with:
          name: release-${{ needs.Build.outputs.version }}
          path: ~/download/artifact
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          token: ${{ secrets.GH_PAT }}
          name: prerelease-${{ needs.Build.outputs.version }}
          files:
            ${{steps.download.outputs.download-path}}/HelloWorld.ipa
            ${{steps.download.outputs.download-path}}/HelloWorld.app.dSYM